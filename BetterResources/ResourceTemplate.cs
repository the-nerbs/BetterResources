// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace BetterResources
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class ResourceTemplate : ResourceTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("using System;\r\nusing System.CodeDom.Compiler;\r\nusing System.ComponentModel;\r\nusin" +
                    "g System.Diagnostics;\r\nusing System.Globalization;\r\nusing System.IO;\r\nusing Syst" +
                    "em.Reflection;\r\nusing System.Resources;\r\nusing System.Runtime.CompilerServices;\r" +
                    "\n\r\n");
            
            #line 17 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
 if (!string.IsNullOrEmpty(Namespace)) { 
            
            #line default
            #line hidden
            this.Write("namespace ");
            
            #line 18 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 20 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("    /// <summary>\r\n    ///   A strongly-typed resource class, for looking up loca" +
                    "lized strings, etc.\r\n    /// </summary>\r\n    [GeneratedCode(\"");
            
            #line 24 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ToolName));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 24 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ToolVersion));
            
            #line default
            #line hidden
            this.Write("\")]\r\n    [DebuggerNonUserCode]\r\n    [CompilerGenerated]\r\n    ");
            
            #line 27 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(AccessModifer));
            
            #line default
            #line hidden
            this.Write(" static class ");
            
            #line 27 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(@"
    {
        private static ResourceManager resourceManager;

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        public static CultureInfo Culture { get; set; }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public static ResourceManager ResourceManager
        {
            get
            {
                if (resourceManager == null)
                {
                    resourceManager = new ResourceManager(""");
            
            #line 47 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ResourceName));
            
            #line default
            #line hidden
            this.Write("\", typeof(");
            
            #line 47 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(").GetTypeInfo().Assembly);\r\n                }\r\n\r\n                return resourceM" +
                    "anager;\r\n            }\r\n        }\r\n\r\n\r\n");
            
            #line 55 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
  foreach (StringResource res in StringResources)
    {
        if (res.IsFormatString)
        {

            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        ///   Gets a localized format string similar to " +
                    "\"");
            
            #line 62 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Value));
            
            #line default
            #line hidden
            this.Write("\".\r\n");
            
            #line 63 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            if (res.HasComment)
            {

            
            #line default
            #line hidden
            this.Write("        ///   ");
            
            #line 67 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 68 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("        /// </summary>\r\n        public static string ");
            
            #line 72 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("Raw\r\n        {\r\n            get { return ResourceManager.GetString(\"");
            
            #line 74 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("\", Culture); }\r\n        }\r\n\r\n        /// <summary>\r\n        ///   Gets a formatte" +
                    "d, localized string similar to \"");
            
            #line 78 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Value));
            
            #line default
            #line hidden
            this.Write("\".\r\n");
            
            #line 79 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            if (res.HasComment)
            {

            
            #line default
            #line hidden
            this.Write("        ///   ");
            
            #line 83 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 84 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("        /// </summary>\r\n        public static string ");
            
            #line 88 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 88 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.FormatParameters));
            
            #line default
            #line hidden
            this.Write(")\r\n        {\r\n            return string.Format(");
            
            #line 90 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("Raw, ");
            
            #line 90 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.FormatCallParameters));
            
            #line default
            #line hidden
            this.Write(");\r\n        }\r\n");
            
            #line 92 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

        }
        else
        {

            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        ///   Gets a localized string similar to \"");
            
            #line 99 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Value));
            
            #line default
            #line hidden
            this.Write("\".\r\n");
            
            #line 100 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            if (res.HasComment)
            {

            
            #line default
            #line hidden
            this.Write("        ///   ");
            
            #line 104 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 105 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("        /// </summary>\r\n        public static string ");
            
            #line 109 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            get { return ResourceManager.GetString(\"");
            
            #line 111 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("\", Culture); }\r\n        }\r\n");
            
            #line 113 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

        }
    }

    foreach (TextFileResource res in TextFileResources)
    {

            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        ///   Gets a localized resource of type string.\r" +
                    "\n");
            
            #line 123 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            if (res.HasComment)
            {

            
            #line default
            #line hidden
            this.Write("        ///   ");
            
            #line 127 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 128 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("        /// </summary>\r\n        public static string ");
            
            #line 132 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            get { return ResourceManager.GetString(\"");
            
            #line 134 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("\", Culture); }\r\n        }\r\n");
            
            #line 136 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

    }

    foreach (ObjectResource res in ObjectResources)
    {

            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        ///   Looks up a localized resource of type ");
            
            #line 144 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Type));
            
            #line default
            #line hidden
            this.Write(".\r\n");
            
            #line 145 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            if (res.HasComment)
            {

            
            #line default
            #line hidden
            this.Write("        ///   ");
            
            #line 149 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 150 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("        /// </summary>\r\n        public static ");
            
            #line 154 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Type));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 154 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            get\r\n            {\r\n                object obj = Resourc" +
                    "eManager.GetObject(\"");
            
            #line 158 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("\", Culture);\r\n                return (");
            
            #line 159 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Type));
            
            #line default
            #line hidden
            this.Write(")obj;\r\n            }\r\n        }\r\n");
            
            #line 162 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

    }

    foreach (StreamResource res in StreamResources)
    {

            
            #line default
            #line hidden
            this.Write("\r\n        /// <summary>\r\n        ///   Looks up a localized resource of type Unma" +
                    "nagedMemoryStream.\r\n");
            
            #line 171 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            if (res.HasComment)
            {

            
            #line default
            #line hidden
            this.Write("        ///   ");
            
            #line 175 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Comment));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 176 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("        /// </summary>\r\n        public static UnmanagedMemoryStream ");
            
            #line 180 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("\r\n        {\r\n            get\r\n            {\r\n                return ResourceManag" +
                    "er.GetStream(\"");
            
            #line 184 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(res.Name));
            
            #line default
            #line hidden
            this.Write("\", Culture);\r\n            }\r\n        }\r\n");
            
            #line 187 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"

    }

            
            #line default
            #line hidden
            this.Write("    }\r\n");
            
            #line 191 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
 if (!string.IsNullOrEmpty(Namespace)) { 
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 193 "E:\Projects\BetterResources\BetterResources\ResourceTemplate.tt"
 } 
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class ResourceTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
